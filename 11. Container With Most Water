#Given n non-negative integers a1, a2, ..., anÂ , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.


#Solution: consider that the shortest board and the distence between two board matter the area. So when the two pointer comes closer, trying to find the highest one in the lower boards 
class Solution:
    def maxArea(self, height: List[int]) -> int:
        i,j= 0,len(height)-1
        ans = (j-i)*min(height[i],height[j])
        while i<j:

            if height[i] < height[j]:
                ans = max(ans,(j-i)*height[i])
                i +=1
            
            else:
                ans = max(ans,(j-i)*height[j])
                j -=1 
        
        return ans
